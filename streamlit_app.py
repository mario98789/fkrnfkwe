import streamlit as st
import requests
import pandas as pd

st.set_page_config(page_title="TGStat –ü–∞—Ä—Å–µ—Ä", layout="centered")
st.title("üîç –ü–∞—Ä—Å–µ—Ä Telegram-–∫–∞–Ω–∞–ª–æ–≤ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º (—á–µ—Ä–µ–∑ TGStat API)")

api_token = st.text_input("üîë –í–≤–µ–¥–∏—Ç–µ –≤–∞—à TGStat API —Ç–æ–∫–µ–Ω:", type="password")
keywords_input = st.text_area("üìù –í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É):", value="—ç–∑–æ—Ç–µ—Ä–∏–∫–∞\n–∞—Å—Ç—Ä–æ–ª–æ–≥–∏—è\n–Ω—É–º–µ—Ä–æ–ª–æ–≥–∏—è\n—Ç–∞—Ä–æ\n–º–∞—Ç—Ä–∏—Ü—ã —Å—É–¥—å–±—ã")
limit = st.slider("üìÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–Ω–∞–ª–æ–≤ –Ω–∞ –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å:", min_value=1, max_value=100, value=20)
start = st.button("üöÄ –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫")

def search_channels(keyword, token, limit):
    url = "https://api.tgstat.ru/channels/search"
    params = {
        "token": token,
        "q": keyword,
        "limit": limit,
        "language": "russian"
    }
    response = requests.get(url, params=params)
    if response.status_code == 200:
        data = response.json()
        if data["status"] == "ok":
            return data["response"]["items"]
        else:
            st.error(f"–û—à–∏–±–∫–∞ –æ—Ç API: {data.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            return []
    else:
        st.error(f"HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
        return []

if start:
    if not api_token:
        st.warning("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à TGStat API —Ç–æ–∫–µ–Ω.")
    elif not keywords_input.strip():
        st.warning("‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ.")
    else:
        all_channels = []
        keywords = [k.strip() for k in keywords_input.splitlines() if k.strip()]
        with st.spinner("üîç –ü–æ–∏—Å–∫ –∫–∞–Ω–∞–ª–æ–≤..."):
            for kw in keywords:
                st.text(f"üîé –ü–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É: {kw}")
                channels = search_channels(kw, api_token, limit)
                for ch in channels:
                    all_channels.append({
                        "–ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ": kw,
                        "–ù–∞–∑–≤–∞–Ω–∏–µ": ch.get("title", ""),
                        "Username": ch.get("username", ""),
                        "–°—Å—ã–ª–∫–∞": f"https://{ch.get('link', '')}",
                        "–û–ø–∏—Å–∞–Ω–∏–µ": ch.get("about", ""),
                        "–ü–æ–¥–ø–∏—Å—á–∏–∫–∏": ch.get("participants_count", 0)
                    })

        if all_channels:
            df = pd.DataFrame(all_channels)
            st.success(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–∞–Ω–∞–ª–æ–≤: {len(df)}")
            st.dataframe(df)
            csv = df.to_csv(index=False)
            st.download_button("üì• –°–∫–∞—á–∞—Ç—å CSV", data=csv, file_name="tgstat_channels.csv", mime="text/csv")
        else:
            st.info("üòï –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
