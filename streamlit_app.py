import streamlit as st
import requests
from bs4 import BeautifulSoup
import time
import re

st.set_page_config(page_title="TGStat –ü–∞—Ä—Å–µ—Ä", layout="centered")
st.title("üîç –ü–∞—Ä—Å–µ—Ä Telegram-–∫–∞–Ω–∞–ª–æ–≤ –ø–æ —Ç–µ–º–∞—Ç–∏–∫–∞–º (TGStat.ru)")

keywords_input = st.text_area("üîë –í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É):", value="—ç–∑–æ—Ç–µ—Ä–∏–∫–∞\n–∞—Å—Ç—Ä–æ–ª–æ–≥–∏—è\n–Ω—É–º–µ—Ä–æ–ª–æ–≥–∏—è\n—Ç–∞—Ä–æ\n–º–∞—Ç—Ä–∏—Ü—ã —Å—É–¥—å–±—ã")
pages = st.slider("üìÑ –°–∫–æ–ª—å–∫–æ —Å—Ç—Ä–∞–Ω–∏—Ü –ø–∞—Ä—Å–∏—Ç—å –Ω–∞ –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å?", min_value=1, max_value=10, value=3)
start = st.button("üöÄ –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫")

HEADERS = {
    "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36"
}
BASE_URL = "https://tgstat.ru/channels/search"

def parse_tgstat(keyword, pages):
    links = set()
    for page in range(1, pages + 1):
        params = {
            "q": keyword,
            "sort": "subscribers",
            "page": page
        }
        res = requests.get(BASE_URL, params=params, headers=HEADERS)
        if res.status_code != 200:
            st.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è: {keyword} (—Å—Ç—Ä. {page})")
            continue

        soup = BeautifulSoup(res.text, "html.parser")
        results = soup.select("a.channel-info")

        for result in results:
            href = result.get("href", "")
            if "t.me/" in href:
                links.add(href.strip())

        time.sleep(1)
    return links

if start:
    if not keywords_input.strip():
        st.warning("‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ.")
    else:
        all_links = set()
        keywords = [k.strip() for k in keywords_input.splitlines() if k.strip()]
        with st.spinner("üîç –ü–∞—Ä—Å–∏–º –∫–∞–Ω–∞–ª—ã..."):
            for kw in keywords:
                st.text(f"üîé {kw}")
                links = parse_tgstat(kw, pages)
                all_links.update(links)

        if all_links:
            result_text = "\n".join(sorted(all_links))
            st.success(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å—Å—ã–ª–æ–∫: {len(all_links)}")
            st.download_button("üì• –°–∫–∞—á–∞—Ç—å .txt", data=result_text, file_name="tgstat_links.txt")
        else:
            st.info("üòï –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
