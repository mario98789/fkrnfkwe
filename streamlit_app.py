import streamlit as st
from telethon.sync import TelegramClient
from telethon.sessions import StringSession
from telethon.tl.functions.contacts import SearchRequest
import os

st.set_page_config(page_title="Telegram –ö–∞–Ω–∞–ª –ü–∞—Ä—Å–µ—Ä", layout="centered")
st.title("üîÆ –ü–æ–∏—Å–∫ Telegram-–∫–∞–Ω–∞–ª–æ–≤ –ø–æ –∫–ª—é—á–µ–≤–∏–∫–∞–º")
st.markdown("–ó–∞–≥—Ä—É–∑–∏ `.session` —Ñ–∞–π–ª –∏ –ø–æ–ª—É—á–∏ —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ —Å t.me-—Å—Å—ã–ª–∫–∞–º–∏")

# –ó–∞–≥—Ä—É–∑–∫–∞ .session —Ñ–∞–π–ª–∞
uploaded_file = st.file_uploader("üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç–µ .session —Ñ–∞–π–ª", type=["session"])

# –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
keywords = st.text_area("üóù –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É)", value="""—ç–∑–æ—Ç–µ—Ä–∏–∫–∞
–Ω—É–º–µ—Ä–æ–ª–æ–≥–∏—è
–∞—Å—Ç—Ä–æ–ª–æ–≥–∏—è
–Ω–µ–π—Ä–æ–≥—Ä–∞—Ñ–∏–∫–∞
—Ç–∞—Ä–æ
–º–∞—Ç—Ä–∏—Ü—ã —Å—É–¥—å–±—ã""")

start = st.button("üöÄ –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫")

if uploaded_file and start:
    with st.spinner("üîå –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Telegram..."):

        session_data = uploaded_file.read()
        session_name = "user_session"
        session_path = f"{session_name}.session"

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        with open(session_path, "wb") as f:
            f.write(session_data)

        try:
            # –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ fake api_id/api_hash –¥–ª—è –æ–±—Ö–æ–¥–∞
            client = TelegramClient(session_name, api_id=12345, api_hash="0123456789abcdef0123456789abcdef")
            client.connect()

            if not client.is_user_authorized():
                st.error("‚ùå –°–µ—Å—Å–∏—è –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∞. –°–æ–∑–¥–∞–π—Ç–µ –≤–∞–ª–∏–¥–Ω—ã–π .session —Ñ–∞–π–ª.")
            else:
                st.success("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")

                found_links = set()
                kw_list = [k.strip() for k in keywords.splitlines() if k.strip()]

                for keyword in kw_list:
                    st.write(f"üîç –ò—â–µ–º –ø–æ –∫–ª—é—á–µ–≤–∏–∫—É: **{keyword}**")
                    try:
                        result = client(SearchRequest(q=keyword, limit=100, offset=0))
                        for user in result.users:
                            if user.username:
                                found_links.add(f"https://t.me/{user.username}")
                    except Exception as e:
                        st.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ '{keyword}': {e}")

                if found_links:
                    result_text = "\n".join(sorted(found_links))
                    st.markdown(f"### ‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å—Å—ã–ª–æ–∫: {len(found_links)}")
                    st.download_button("üì• –°–∫–∞—á–∞—Ç—å .txt", result_text, file_name="channels.txt")
                else:
                    st.info("üòï –ü–æ –∑–∞–ø—Ä–æ—Å–∞–º –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

        finally:
            client.disconnect()
            if os.path.exists(session_path):
                os.remove(session_path)
