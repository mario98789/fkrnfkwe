import streamlit as st
from telethon.sync import TelegramClient
from telethon.sessions import StringSession
from telethon.tl.functions.messages import GetHistoryRequest
import asyncio
import re
import os

st.set_page_config(page_title="SearcheeBot –ü–∞—Ä—Å–µ—Ä", layout="centered")
st.title("ü§ñ –ü–æ–∏—Å–∫ Telegram-–∫–∞–Ω–∞–ª–æ–≤ —á–µ—Ä–µ–∑ @SearcheeBot")
st.markdown("–ó–∞–≥—Ä—É–∑–∏ `.session` —Ñ–∞–π–ª –∏ –ø–æ–ª—É—á–∏ —Å—Å—ã–ª–∫–∏ —Å –±–æ—Ç–∞ [@SearcheeBot](https://t.me/SearcheeBot)")

uploaded_file = st.file_uploader("üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç–µ .session —Ñ–∞–π–ª", type=["session"])

keywords = st.text_area("üóù –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É)", value="—ç–∑–æ—Ç–µ—Ä–∏–∫–∞\n–Ω—É–º–µ—Ä–æ–ª–æ–≥–∏—è\n–∞—Å—Ç—Ä–æ–ª–æ–≥–∏—è\n–Ω–µ–π—Ä–æ–≥—Ä–∞—Ñ–∏–∫–∞\n—Ç–∞—Ä–æ\n–º–∞—Ç—Ä–∏—Ü—ã —Å—É–¥—å–±—ã")
start = st.button("üöÄ –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫")

async def search_via_searcheebot(session_path, keyword_list):
    client = TelegramClient(session_path, api_id=12345, api_hash="0123456789abcdef0123456789abcdef")
    await client.start()

    found_links = set()
    bot = await client.get_entity("@SearcheeBot")

    for keyword in keyword_list:
        st.markdown(f"üîç <b>–ó–∞–ø—Ä–æ—Å:</b> <code>{keyword}</code>", unsafe_allow_html=True)
        await client.send_message(bot, keyword)
        await asyncio.sleep(4)

        messages = await client.get_messages(bot, limit=30)
        if not messages:
            st.warning("‚ö†Ô∏è –ë–æ—Ç –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª.")
            continue

        got_links = False
        for msg in messages:
            if msg.message:
                st.code(msg.message[:300], language="text")  # –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á–∞—Å—Ç—å —Ç–µ–∫—Å—Ç–∞
                links = re.findall(r'https://t\.me/[^\s\)]+', msg.message)
                if links:
                    got_links = True
                    found_links.update(links)

        if not got_links:
            st.info("‚ÑπÔ∏è –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω, –Ω–æ –±–µ–∑ —Å—Å—ã–ª–æ–∫.")

        # –ù–∞–∂–∏–º–∞–µ–º "More" –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑
        for i in range(5):
            await client.send_message(bot, "More")
            await asyncio.sleep(3)
            more_messages = await client.get_messages(bot, limit=20)
            for msg in more_messages:
                if msg.message:
                    links = re.findall(r'https://t\.me/[^\s\)]+', msg.message)
                    if links:
                        found_links.update(links)

    await client.disconnect()
    return sorted(found_links)

if uploaded_file and start:
    session_name = "user_session"
    session_path = f"{session_name}.session"
    with open(session_path, "wb") as f:
        f.write(uploaded_file.read())

    with st.spinner("üîç –ò—â–µ–º —á–µ—Ä–µ–∑ @SearcheeBot..."):
        try:
            kw_list = [k.strip() for k in keywords.splitlines() if k.strip()]
            links = asyncio.run(search_via_searcheebot(session_name, kw_list))

            if links:
                result_text = "\n".join(links)
                st.success(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å—Å—ã–ª–æ–∫: {len(links)}")
                st.download_button("üì• –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç", data=result_text, file_name="searchee_results.txt")
            else:
                st.info("üòï –ë–æ—Ç –æ—Ç–≤–µ—Ç–∏–ª, –Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

        except Exception as e:
            st.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")

    os.remove(session_path)
